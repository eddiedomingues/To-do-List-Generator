/* -- CSS module for custom Select component -- */
/* Containers */
.container {
  display: grid;
  grid-template-columns: minmax(min-content, 1fr);
  grid-template-rows: minmax(min-content, 1fr) minmax(0, min-content);
  gap: 0px 0px;
  width: fit-content;
  position: relative;
  cursor: pointer;
  box-shadow: var(--box-shadow);
}

/* Custom Shadow */
/* Disable Shadow when options is hidden, class */
.shadow.noShadow {
  display: none;
}

/* Custom shadow style */
.shadow {
  /* Position absolute to keep it on top and from overflowing */
  position: absolute;

  /* Custom variables for the script to set based off the styles the user has on the original select element */
  /* And variables for the script to control its position and size */
  top: var(--top);
  bottom: var(--bottom);
  left: var(--left);
  right: var(--right);
  height: var(--height);
  width: var(--width);
  opacity: var(--opacity);
  background-color: transparent;
  pointer-events: none;
  box-shadow: var(--box-shadow);
  border-top-left-radius: var(--border-top-left-radius);
  border-top-right-radius: var(--border-top-right-radius);
  border-bottom-left-radius: var(--border-bottom-left-radius);
  border-bottom-right-radius: var(--border-bottom-right-radius);
}

.noShadow {
  box-shadow: none !important;
}

/* Options Container (deprecated)*/
.optionsContainer {
  position: relative;
  max-height: 0;
  padding-right: inherit;
  padding-left: inherit;
  width: fit-content;
  align-items: start;
}

/* Main options wrapper (It's this element that the script controls the size and position)*/
.optionsWrapper {
  min-height: 0;
  padding-top: 0.3rem;
  padding-bottom: 0.3rem;
  overflow-wrap: anywhere;
}

/* Header */
.header {
  pointer-events: none;
  display: flex;
  flex-direction: row; /* Align items side-by-side */
  align-items: center; /* This is the key: Vertically centers everything */
  gap: 0.1rem; /* Adds a little space between the text and the button */
}

.headerContent {
  display: grid;
  align-items: center;
  pointer-events: initial;
  user-select: none;
  line-height: normal;
}

/* Toggle button */
.toggleButton {
  height: 1rem;
  width: 1rem;
  display: block;
  justify-items: center;
  align-content: center;
  padding: 0;
  cursor: pointer;
  pointer-events: initial;
  box-shadow: none;
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  margin-left: auto;
  overflow: hidden;
  display: grid;
  justify-content: center;
  align-items: center;
}

.toggleImage {
  height: 185%;
  width: 185%;
  pointer-events: none;
}

/* Options */
.options {
  display: grid;
  left: 0;
  top: 0;
  grid-template-columns: minmax(min-content, 1fr);
  grid-template-rows: 0fr;
  gap: 0px 0px;
  width: fit-content;
  background-color: rgb(51 51 51 / 43%);
  position: absolute;
  transition: grid-template-rows 0.2s ease-in-out, opacity 0.2s ease-in-out,
    min-width 0.2s ease-in-out, height 0.2s ease-in-out;
  min-height: 0;
  opacity: 0;
  pointer-events: none;
  overflow: auto;
  color: rgb(224 224 224 / 87%);
}

.options.expanded {
  grid-template-rows: 1fr;
  user-select: none;
  opacity: 1;
  pointer-events: initial;
}
.option {
  height: fit-content;
  cursor: pointer;
  user-select: none;
  pointer-events: all;
  padding-top: 0.1rem;
  padding-bottom: 0.1rem;
  padding-left: 0.3rem;
  padding-right: 0.3rem;
  justify-content: center;
  text-align: center;
}

.option.selected {
  display: none;
}
